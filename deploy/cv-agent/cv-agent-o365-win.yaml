apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cv-agent-o365-win
  name: cv-agent-o365-win
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cv-agent-o365-win
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9144"
      labels:
        app: cv-agent-o365-win
    spec:
     serviceAccountName: cv-agent
     containers:
     - name: proxy
       image: cv-o365-win-proxy
       imagePullPolicy: IfNotPresent
       envFrom:
       - configMapRef:
           name: cv-agent
       ports:
       - containerPort: 8400
       startupProbe:
         exec:
           command:
           - "powershell"
           - "-Command"
           - "($env:CV_CLIENT_REGISTERED -eq 'yes')"
         initialDelaySeconds: 80
         failureThreshold: 5
         periodSeconds: 10
       livenessProbe:
         tcpSocket:
           port: 8400
       lifecycle:
         postStart:
           exec:
             command:
             - "powershell"
             - "-Command"
             - "(Restart-Service -Force -DisplayName \"Commvault*\"); ((/cv/Base/simcallwrapper.exe -OpType 1000 -CSHost $env:CV_CSHOSTNAME -CSName $env:CV_CSCLIENTNAME -clientName $(hostname) -clientHostName $(hostname) -DisplayName $(hostname) -ClientGroup $env:CV_CLIENTGROUP -user $env:CV_COMMCELL_USER -password $env:CV_COMMCELL_PWD -output registerCS_output.xml) -and ($env:CV_CLIENT_REGISTERED='yes'))"
         preStop:
           exec:
             command:
             - "powershell"
             - "-Command"
             - "(/cv/Base/qlogin -u $env:CV_COMMCELL_USER -clp $env:CV_COMMCELL_PWD) -and (/cv/Base/qoperation execscript -sn DeleteClient.sql -si $(hostname))"
       command:
       - ping
       - -t
       - localhost
       volumeMounts:
       - mountPath: "/cv/Log Files"
         name: cv-data
     - name: grok
       image: grok-exporter:test
       imagePullPolicy: IfNotPresent
       command:
       - grok_exporter
       - -config
       - /etc/grok_exporter/config.yml
       volumeMounts:
       - mountPath: /usr/share/app_log
         name: cv-data
       - mountPath: /etc/grok_exporter
         name: grok-config
     volumes:
     - name: cv-data
       emptyDir: {}
     - name: grok-config
       configMap:
         name: grok-exporter-o365
     nodeSelector:
      kubernetes.io/os: windows
     tolerations:
      - key: "os"
        operator: "Equal"
        value: "windows"
        effect: "NoSchedule"
